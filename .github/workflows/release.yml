# .github/workflows/release.yml
name: ZapQ CI / Release (Linux only)

on:
  push:
    branches: [master]
    tags: ["v*.*.*"]          # tag → release
  pull_request:
    branches: [master]

permissions:
  contents: write
  packages: read

env:
  CGO_ENABLED: 0
  GOFLAGS: -trimpath

jobs:
# ────────────────────────────────────────────────────────────────
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "stable"
          cache: true
      - name: Vet
        run: go vet ./...
      - name: Test (race detector)
        run: CGO_ENABLED=1 go test -race -cover ./...

# ────────────────────────────────────────────────────────────────
  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goarch: [amd64, arm64]   # ⬅︎ Linux only
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "stable"
          cache: true

      - name: Build linux-${{ matrix.goarch }}
        run: |
          mkdir -p dist
          OUT="zapq-linux-${{ matrix.goarch }}"
          GOOS=linux GOARCH=${{ matrix.goarch }} \
            go build -ldflags "-s -w" -o "dist/${OUT}" .

      - name: Compress
        run: |
          cd dist
          OUT="zapq-linux-${{ matrix.goarch }}"
          tar czf "${OUT}.tar.gz" "${OUT}"

      - uses: actions/upload-artifact@v4
        with:
          name: binaries-linux-${{ matrix.goarch }}
          path: dist/*

# ────────────────────────────────────────────────────────────────
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: binaries-linux-*

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: dist/*
